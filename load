#!/bin/dash

# TODO: add termination notification, do somecleanup, need to revert back
# TODO: add timeout mechanism on clone function
# TODO: add flexible node selection
# TODO: make some hardcoded values as variable for future change, like directory name - .cofing/nodes
# TODO: research on what's the benefit of using subshell in shell script
clone() {
    if [ "$*" = "clashfree" ]; then  # $* treat all arguments as a string rather than as an array like $a
	    git pull
    else 
	    git clone https://github.com/anaer/sub.git
    fi
}

load_sub_retry() {
    time=1
    while [ "$time" -lt 4 ]; do
	echo ">>>trying git clone $time time"
	if clone; then
	    while [ ! -f sub/clash.yaml ]; do # alternative: inotifywait, see references below
		    echo ">>> waiting for git writing files for 1 sec"; sleep 1
	    done
	    echo ">>> Done git cloning sub"

        if [ "$(uname)" = "Darwin" ]; then
	        sed -Ei "" '/RULE/d' sub/clash.yaml
        else
	        sed -Ei '/RULE/d' sub/clash.yaml
        fi
	    echo ">>> Removed bad lines by sed"
	    return 0
	else
	    time=$((time + 1))
	fi
    done
    return 1
}

echo "cd into $HOME/.cache"; cd "$HOME"/.cache || exit
echo "backup sub as sub.bak"; mv sub sub.bak || exit
echo ">>> Start updating sub..."
# the 2nd way to check if a command succeeded
load_sub_retry
return_sub=$?
if [ $return_sub -ne 0 ]; then
    echo "|| check folder" && ll
    mv sub.bak sub
    echo "!!! Failure on sub, put it back"
else
    rm -rf sub.bak
    echo ">>> Done updating sub, removed backup"
	pkill clash
	plug
    echo ">>> clash has restarted"
fi
echo "|| check folder" && ll

load_clashfree_retry() {
    time=1
    while [ "$time" -lt 4 ]
    do
	echo ">>> trying git pull $time time"
        clone clashfree
	# the 1st way to check of a command succeeded, but not suggested
	if [ $? -eq 0 ]; then
	    return 0
	else
	    time=$((time + 1))
	fi
    done
    return 1
}

# echo "cd into $HOME/.config/.cache"
# cd "$HOME"/.cache || exit
# echo ">>> Start updating clashfree..."
# the 3rd way to way if a command succeeded
# if load_clashfree_retry; then
#     echo "\n>>> Done updating clashfree"
# else
#     echo "\n!!! Failure on clashfree"
# fi
# echo "go back to $HOME/.cache" && cd ..
# echo "|| check folder" && ll


# References
# https://unix.stackexchange.com/questions/309339/how-to-exit-a-shell-script-if-one-part-of-it-fails
# https://unix.stackexchange.com/questions/185283/how-do-i-wait-for-a-file-in-the-shell-script
